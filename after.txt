Classfile /private/tmp/modb-test/build/classes/kotlin/main/io/github/manamiproject/modb/test/FunctionsKt.class
  Last modified 21 May 2024; size 8285 bytes
  SHA-256 checksum 3de0fefcc1802420e6d6c3515a5874753401fef1a11c384004fd28604e9cf29c
  Compiled from "Functions.kt"
public final class io.github.manamiproject.modb.test.FunctionsKt
  minor version: 0
  major version: 65
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // io/github/manamiproject/modb/test/FunctionsKt
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 6
Constant pool:
    #1 = Utf8               io/github/manamiproject/modb/test/FunctionsKt
    #2 = Class              #1            // io/github/manamiproject/modb/test/FunctionsKt
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               testResource
    #6 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;
    #7 = Utf8               Lorg/jetbrains/annotations/NotNull;
    #8 = Utf8               path
    #9 = String             #8            // path
   #10 = Utf8               kotlin/jvm/internal/Intrinsics
   #11 = Class              #10           // kotlin/jvm/internal/Intrinsics
   #12 = Utf8               checkNotNullParameter
   #13 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)V
   #14 = NameAndType        #12:#13       // checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
   #15 = Methodref          #11.#14       // kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
   #16 = Utf8               java/lang/CharSequence
   #17 = Class              #16           // java/lang/CharSequence
   #18 = Utf8               kotlin/text/StringsKt
   #19 = Class              #18           // kotlin/text/StringsKt
   #20 = Utf8               isBlank
   #21 = Utf8               (Ljava/lang/CharSequence;)Z
   #22 = NameAndType        #20:#21       // isBlank:(Ljava/lang/CharSequence;)Z
   #23 = Methodref          #19.#22       // kotlin/text/StringsKt.isBlank:(Ljava/lang/CharSequence;)Z
   #24 = Utf8               Path must not be blank
   #25 = String             #24           // Path must not be blank
   #26 = Utf8               java/lang/IllegalArgumentException
   #27 = Class              #26           // java/lang/IllegalArgumentException
   #28 = Utf8               toString
   #29 = Utf8               ()Ljava/lang/String;
   #30 = NameAndType        #28:#29       // toString:()Ljava/lang/String;
   #31 = Methodref          #4.#30        // java/lang/Object.toString:()Ljava/lang/String;
   #32 = Utf8               <init>
   #33 = Utf8               (Ljava/lang/String;)V
   #34 = NameAndType        #32:#33       // "<init>":(Ljava/lang/String;)V
   #35 = Methodref          #27.#34       // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #36 = Utf8               java/lang/ClassLoader
   #37 = Class              #36           // java/lang/ClassLoader
   #38 = Utf8               getSystemResource
   #39 = Utf8               (Ljava/lang/String;)Ljava/net/URL;
   #40 = NameAndType        #38:#39       // getSystemResource:(Ljava/lang/String;)Ljava/net/URL;
   #41 = Methodref          #37.#40       // java/lang/ClassLoader.getSystemResource:(Ljava/lang/String;)Ljava/net/URL;
   #42 = Utf8               java/net/URL
   #43 = Class              #42           // java/net/URL
   #44 = Utf8               toURI
   #45 = Utf8               ()Ljava/net/URI;
   #46 = NameAndType        #44:#45       // toURI:()Ljava/net/URI;
   #47 = Methodref          #43.#46       // java/net/URL.toURI:()Ljava/net/URI;
   #48 = Utf8               java/lang/IllegalStateException
   #49 = Class              #48           // java/lang/IllegalStateException
   #50 = Utf8               Path [\u0001] not found.
   #51 = String             #50           // Path [\u0001] not found.
   #52 = Utf8               java/lang/invoke/StringConcatFactory
   #53 = Class              #52           // java/lang/invoke/StringConcatFactory
   #54 = Utf8               makeConcatWithConstants
   #55 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #56 = NameAndType        #54:#55       // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #57 = Methodref          #53.#56       // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #58 = MethodHandle       6:#57         // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #59 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #60 = NameAndType        #54:#59       // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #61 = InvokeDynamic      #0:#60        // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #62 = Methodref          #49.#34       // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #63 = Utf8               java/nio/file/Paths
   #64 = Class              #63           // java/nio/file/Paths
   #65 = Utf8               get
   #66 = Utf8               (Ljava/net/URI;)Ljava/nio/file/Path;
   #67 = NameAndType        #65:#66       // get:(Ljava/net/URI;)Ljava/nio/file/Path;
   #68 = Methodref          #64.#67       // java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
   #69 = Utf8               get(...)
   #70 = String             #69           // get(...)
   #71 = Utf8               checkNotNullExpressionValue
   #72 = NameAndType        #71:#13       // checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
   #73 = Methodref          #11.#72       // kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
   #74 = Utf8               $i$a$-require-FunctionsKt$testResource$1
   #75 = Utf8               I
   #76 = Utf8               resource
   #77 = Utf8               Ljava/net/URI;
   #78 = Utf8               Ljava/lang/String;
   #79 = Utf8               java/net/URI
   #80 = Class              #79           // java/net/URI
   #81 = Utf8               loadTestResource
   #82 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
   #83 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/String;)TT;
   #84 = Utf8               java/lang/Throwable
   #85 = Class              #84           // java/lang/Throwable
   #86 = NameAndType        #5:#6         // testResource:(Ljava/lang/String;)Ljava/nio/file/Path;
   #87 = Methodref          #2.#86        // io/github/manamiproject/modb/test/FunctionsKt.testResource:(Ljava/lang/String;)Ljava/nio/file/Path;
   #88 = Utf8               java/nio/file/LinkOption
   #89 = Class              #88           // java/nio/file/LinkOption
   #90 = Utf8               java/nio/file/Files
   #91 = Class              #90           // java/nio/file/Files
   #92 = Utf8               exists
   #93 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #94 = NameAndType        #92:#93       // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #95 = Methodref          #91.#94       // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #96 = Utf8               isRegularFile
   #97 = NameAndType        #96:#93       // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #98 = Methodref          #91.#97       // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #99 = Utf8               [\u0001] either not exists or is not a file.
  #100 = String             #99           // [\u0001] either not exists or is not a file.
  #101 = InvokeDynamic      #1:#60        // #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
  #102 = Utf8               T
  #103 = String             #102          // T
  #104 = Utf8               reifiedOperationMarker
  #105 = Utf8               (ILjava/lang/String;)V
  #106 = NameAndType        #104:#105     // reifiedOperationMarker:(ILjava/lang/String;)V
  #107 = Methodref          #11.#106      // kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
  #108 = Utf8               kotlin/jvm/internal/Reflection
  #109 = Class              #108          // kotlin/jvm/internal/Reflection
  #110 = Utf8               getOrCreateKotlinClass
  #111 = Utf8               (Ljava/lang/Class;)Lkotlin/reflect/KClass;
  #112 = NameAndType        #110:#111     // getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
  #113 = Methodref          #109.#112     // kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
  #114 = Utf8               java/lang/String
  #115 = Class              #114          // java/lang/String
  #116 = Utf8               areEqual
  #117 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #118 = NameAndType        #116:#117     // areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #119 = Methodref          #11.#118      // kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #120 = Utf8               getSystemResourceAsStream
  #121 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;
  #122 = NameAndType        #120:#121     // getSystemResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
  #123 = Methodref          #37.#122      // java/lang/ClassLoader.getSystemResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
  #124 = Utf8               kotlin/text/Charsets
  #125 = Class              #124          // kotlin/text/Charsets
  #126 = Utf8               UTF_8
  #127 = Utf8               Ljava/nio/charset/Charset;
  #128 = NameAndType        #126:#127     // UTF_8:Ljava/nio/charset/Charset;
  #129 = Fieldref           #125.#128     // kotlin/text/Charsets.UTF_8:Ljava/nio/charset/Charset;
  #130 = Utf8               java/io/InputStreamReader
  #131 = Class              #130          // java/io/InputStreamReader
  #132 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #133 = NameAndType        #32:#132      // "<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #134 = Methodref          #131.#133     // java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #135 = Utf8               java/io/Reader
  #136 = Class              #135          // java/io/Reader
  #137 = Utf8               java/io/BufferedReader
  #138 = Class              #137          // java/io/BufferedReader
  #139 = Utf8               (Ljava/io/Reader;I)V
  #140 = NameAndType        #32:#139      // "<init>":(Ljava/io/Reader;I)V
  #141 = Methodref          #138.#140     // java/io/BufferedReader."<init>":(Ljava/io/Reader;I)V
  #142 = Utf8               java/io/Closeable
  #143 = Class              #142          // java/io/Closeable
  #144 = Utf8               kotlin/io/TextStreamsKt
  #145 = Class              #144          // kotlin/io/TextStreamsKt
  #146 = Utf8               readText
  #147 = Utf8               (Ljava/io/Reader;)Ljava/lang/String;
  #148 = NameAndType        #146:#147     // readText:(Ljava/io/Reader;)Ljava/lang/String;
  #149 = Methodref          #145.#148     // kotlin/io/TextStreamsKt.readText:(Ljava/io/Reader;)Ljava/lang/String;
  #150 = Utf8               kotlin/jvm/internal/InlineMarker
  #151 = Class              #150          // kotlin/jvm/internal/InlineMarker
  #152 = Utf8               finallyStart
  #153 = Utf8               (I)V
  #154 = NameAndType        #152:#153     // finallyStart:(I)V
  #155 = Methodref          #151.#154     // kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
  #156 = Utf8               kotlin/io/CloseableKt
  #157 = Class              #156          // kotlin/io/CloseableKt
  #158 = Utf8               closeFinally
  #159 = Utf8               (Ljava/io/Closeable;Ljava/lang/Throwable;)V
  #160 = NameAndType        #158:#159     // closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
  #161 = Methodref          #157.#160     // kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
  #162 = Utf8               finallyEnd
  #163 = NameAndType        #162:#153     // finallyEnd:(I)V
  #164 = Methodref          #151.#163     // kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
  #165 = Utf8               java/lang/System
  #166 = Class              #165          // java/lang/System
  #167 = Utf8               lineSeparator
  #168 = NameAndType        #167:#29      // lineSeparator:()Ljava/lang/String;
  #169 = Methodref          #166.#168     // java/lang/System.lineSeparator:()Ljava/lang/String;
  #170 = Utf8               lineSeparator(...)
  #171 = String             #170          // lineSeparator(...)
  #172 = Utf8               \n
  #173 = String             #172          // \n
  #174 = Utf8               replace$default
  #175 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
  #176 = NameAndType        #174:#175     // replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
  #177 = Methodref          #19.#176      // kotlin/text/StringsKt.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
  #178 = Utf8               Unable to load file [\u0001]
  #179 = String             #178          // Unable to load file [\u0001]
  #180 = InvokeDynamic      #2:#60        // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
  #181 = Utf8               [B
  #182 = Class              #181          // "[B"
  #183 = Utf8               readAllBytes
  #184 = Utf8               (Ljava/nio/file/Path;)[B
  #185 = NameAndType        #183:#184     // readAllBytes:(Ljava/nio/file/Path;)[B
  #186 = Methodref          #91.#185      // java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
  #187 = Utf8               readAllBytes(...)
  #188 = String             #187          // readAllBytes(...)
  #189 = Utf8               Unsupported file type. String and ByteArray are supported.
  #190 = String             #189          // Unsupported file type. String and ByteArray are supported.
  #191 = Utf8               $i$a$-require-FunctionsKt$loadTestResource$1
  #192 = Utf8               $i$a$-check-FunctionsKt$loadTestResource$2
  #193 = Utf8               $i$a$-use-FunctionsKt$loadTestResource$3
  #194 = Utf8               p0
  #195 = Utf8               Ljava/io/BufferedReader;
  #196 = Utf8               $i$f$loadTestResource
  #197 = Utf8               file
  #198 = Utf8               Ljava/nio/file/Path;
  #199 = Utf8               java/nio/file/Path
  #200 = Class              #199          // java/nio/file/Path
  #201 = Utf8               kotlin/reflect/KClass
  #202 = Class              #201          // kotlin/reflect/KClass
  #203 = Utf8               java/io/InputStream
  #204 = Class              #203          // java/io/InputStream
  #205 = Utf8               java/nio/charset/Charset
  #206 = Class              #205          // java/nio/charset/Charset
  #207 = Utf8               shouldNotBeInvoked
  #208 = Utf8               ()Ljava/lang/Void;
  #209 = Utf8               should not be invoked
  #210 = String             #209          // should not be invoked
  #211 = Utf8               kotlin/test/AssertionsKt
  #212 = Class              #211          // kotlin/test/AssertionsKt
  #213 = Utf8               fail
  #214 = Utf8               (Ljava/lang/String;)Ljava/lang/Void;
  #215 = NameAndType        #213:#214     // fail:(Ljava/lang/String;)Ljava/lang/Void;
  #216 = Methodref          #212.#215     // kotlin/test/AssertionsKt.fail:(Ljava/lang/String;)Ljava/lang/Void;
  #217 = Utf8               kotlin/KotlinNothingValueException
  #218 = Class              #217          // kotlin/KotlinNothingValueException
  #219 = Utf8               ()V
  #220 = NameAndType        #32:#219      // "<init>":()V
  #221 = Methodref          #218.#220     // kotlin/KotlinNothingValueException."<init>":()V
  #222 = Utf8               exceptionExpected
  #223 = Utf8               (Lkotlin/jvm/functions/Function2;)Ljava/lang/Throwable;
  #224 = Utf8               <T:Ljava/lang/Throwable;>(Lkotlin/jvm/functions/Function2<-Lkotlinx/coroutines/CoroutineScope;-Lkotlin/coroutines/Continuation<-Lkotlin/Unit;>;+Ljava/lang/Object;>;)Ljava/lang/Throwable;
  #225 = Utf8               func
  #226 = String             #225          // func
  #227 = Utf8               kotlin/jvm/internal/Ref$ObjectRef
  #228 = Class              #227          // kotlin/jvm/internal/Ref$ObjectRef
  #229 = Methodref          #228.#220     // kotlin/jvm/internal/Ref$ObjectRef."<init>":()V
  #230 = Utf8               kotlinx/coroutines/CoroutineExceptionHandler
  #231 = Class              #230          // kotlinx/coroutines/CoroutineExceptionHandler
  #232 = Utf8               Key
  #233 = Utf8               Lkotlinx/coroutines/CoroutineExceptionHandler$Key;
  #234 = NameAndType        #232:#233     // Key:Lkotlinx/coroutines/CoroutineExceptionHandler$Key;
  #235 = Fieldref           #231.#234     // kotlinx/coroutines/CoroutineExceptionHandler.Key:Lkotlinx/coroutines/CoroutineExceptionHandler$Key;
  #236 = Utf8               io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$$inlined$CoroutineExceptionHandler$1
  #237 = Class              #236          // io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$$inlined$CoroutineExceptionHandler$1
  #238 = Utf8               (Lkotlinx/coroutines/CoroutineExceptionHandler$Key;Lkotlin/jvm/internal/Ref$ObjectRef;)V
  #239 = NameAndType        #32:#238      // "<init>":(Lkotlinx/coroutines/CoroutineExceptionHandler$Key;Lkotlin/jvm/internal/Ref$ObjectRef;)V
  #240 = Methodref          #237.#239     // io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$$inlined$CoroutineExceptionHandler$1."<init>":(Lkotlinx/coroutines/CoroutineExceptionHandler$Key;Lkotlin/jvm/internal/Ref$ObjectRef;)V
  #241 = Utf8               io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$1
  #242 = Class              #241          // io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$1
  #243 = Utf8               (Lkotlinx/coroutines/CoroutineExceptionHandler;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V
  #244 = NameAndType        #32:#243      // "<init>":(Lkotlinx/coroutines/CoroutineExceptionHandler;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V
  #245 = Methodref          #242.#244     // io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$1."<init>":(Lkotlinx/coroutines/CoroutineExceptionHandler;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V
  #246 = Utf8               kotlin/jvm/functions/Function2
  #247 = Class              #246          // kotlin/jvm/functions/Function2
  #248 = Utf8               kotlinx/coroutines/BuildersKt
  #249 = Class              #248          // kotlinx/coroutines/BuildersKt
  #250 = Utf8               runBlocking$default
  #251 = Utf8               (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
  #252 = NameAndType        #250:#251     // runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
  #253 = Methodref          #249.#252     // kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
  #254 = Utf8               element
  #255 = Utf8               Ljava/lang/Object;
  #256 = NameAndType        #254:#255     // element:Ljava/lang/Object;
  #257 = Fieldref           #228.#256     // kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
  #258 = Utf8               No exception has been thrown
  #259 = String             #258          // No exception has been thrown
  #260 = Utf8               getSimpleName
  #261 = NameAndType        #260:#29      // getSimpleName:()Ljava/lang/String;
  #262 = InterfaceMethodref #202.#261     // kotlin/reflect/KClass.getSimpleName:()Ljava/lang/String;
  #263 = Utf8               checkNotNull
  #264 = Utf8               (Ljava/lang/Object;)V
  #265 = NameAndType        #263:#264     // checkNotNull:(Ljava/lang/Object;)V
  #266 = Methodref          #11.#265      // kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
  #267 = Utf8               getClass
  #268 = Utf8               ()Ljava/lang/Class;
  #269 = NameAndType        #267:#268     // getClass:()Ljava/lang/Class;
  #270 = Methodref          #4.#269       // java/lang/Object.getClass:()Ljava/lang/Class;
  #271 = Utf8               Expected [\u0001] to be thrown, but [\u0001] was thrown.
  #272 = String             #271          // Expected [\u0001] to be thrown, but [\u0001] was thrown.
  #273 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #274 = NameAndType        #54:#273      // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #275 = InvokeDynamic      #3:#274       // #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #276 = Utf8               $i$f$CoroutineExceptionHandler
  #277 = Utf8               $i$f$exceptionExpected
  #278 = Utf8               result
  #279 = Utf8               Lkotlin/jvm/internal/Ref$ObjectRef;
  #280 = Utf8               exceptionHandler
  #281 = Utf8               Lkotlinx/coroutines/CoroutineExceptionHandler;
  #282 = Utf8               Lkotlin/jvm/functions/Function2;
  #283 = Utf8               kotlinx/coroutines/CoroutineExceptionHandler$Key
  #284 = Class              #283          // kotlinx/coroutines/CoroutineExceptionHandler$Key
  #285 = Utf8               Lkotlin/Metadata;
  #286 = Utf8               mv
  #287 = Integer            2
  #288 = Integer            0
  #289 = Utf8               k
  #290 = Utf8               xi
  #291 = Integer            48
  #292 = Utf8               d1
  #293 = Utf8               \u00008\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0010\u0001\n\u0000\n\u0002\u0010\u0003\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\u001a\u000e\u0010\u0000\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u0003\u001a\u001e\u0010\u0004\u001a\u0002H\u0005\"\u0006\b\u0000\u0010\u0005\u0018\u00012\u0006\u0010\u0002\u001a\u00020\u0003H\u0086\b¢\u0006\u0002\u0010\u0006\u001a\u0006\u0010\u0007\u001a\u00020\b\u001aH\u0010\t\u001a\u00020\n\"\n\b\u0000\u0010\u0005\u0018\u0001*\u00020\n2)\b\b\u0010\u000b\u001a#\b\u0001\u0012\u0004\u0012\u00020\r\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u000f0\u000e\u0012\u0006\u0012\u0004\u0018\u00010\u00100\f¢\u0006\u0002\b\u0011H\u0086\bø\u0001\u0000¢\u0006\u0002\u0010\u0012\u0082\u0002\u0007\n\u0005\b\u009920\u0001¨\u0006\u0013
  #294 = Utf8               d2
  #295 = Utf8
  #296 = Utf8               Lkotlin/Function2;
  #297 = Utf8               Lkotlinx/coroutines/CoroutineScope;
  #298 = Utf8               Lkotlin/coroutines/Continuation;
  #299 = Utf8               Lkotlin/ExtensionFunctionType;
  #300 = Utf8               modb-test
  #301 = Utf8               kotlin/jvm/internal/Ref
  #302 = Class              #301          // kotlin/jvm/internal/Ref
  #303 = Utf8               ObjectRef
  #304 = Utf8               Functions.kt
  #305 = Utf8               Lkotlin/jvm/internal/SourceDebugExtension;
  #306 = Utf8               value
  #307 = Utf8               SMAP\nFunctions.kt\nKotlin\n*S Kotlin\n*F\n+ 1 Functions.kt\nio/github/manamiproject/modb/test/FunctionsKt\n+ 2 fake.kt\nkotlin/jvm/internal/FakeKt\n+ 3 CoroutineExceptionHandler.kt\nkotlinx/coroutines/CoroutineExceptionHandlerKt\n*L\n1#1,106:1\n1#2:107\n44#3,4:108\n*S KotlinDebug\n*F\n+ 1 Functions.kt\nio/github/manamiproject/modb/test/FunctionsKt\n*L\n91#1:108,4\n*E\n
  #308 = Utf8               Code
  #309 = Utf8               StackMapTable
  #310 = Utf8               LineNumberTable
  #311 = Utf8               LocalVariableTable
  #312 = Utf8               RuntimeInvisibleAnnotations
  #313 = Utf8               RuntimeInvisibleParameterAnnotations
  #314 = Utf8               Signature
  #315 = Utf8               InnerClasses
  #316 = Utf8               SourceFile
  #317 = Utf8               SourceDebugExtension
  #318 = Utf8               RuntimeVisibleAnnotations
  #319 = Utf8               BootstrapMethods
{
  public static final java.nio.file.Path testResource(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/nio/file/Path;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: ldc           #9                  // String path
         3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
         6: aload_0
         7: checkcast     #17                 // class java/lang/CharSequence
        10: invokestatic  #23                 // Method kotlin/text/StringsKt.isBlank:(Ljava/lang/CharSequence;)Z
        13: ifne          20
        16: iconst_1
        17: goto          21
        20: iconst_0
        21: ifne          41
        24: iconst_0
        25: istore_2
        26: ldc           #25                 // String Path must not be blank
        28: astore_2
        29: new           #27                 // class java/lang/IllegalArgumentException
        32: dup
        33: aload_2
        34: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
        37: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: aload_0
        42: invokestatic  #41                 // Method java/lang/ClassLoader.getSystemResource:(Ljava/lang/String;)Ljava/net/URL;
        45: dup
        46: ifnull        56
        49: invokevirtual #47                 // Method java/net/URL.toURI:()Ljava/net/URI;
        52: dup
        53: ifnonnull     71
        56: pop
        57: new           #49                 // class java/lang/IllegalStateException
        60: dup
        61: aload_0
        62: invokedynamic #61,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        67: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        70: athrow
        71: astore_1
        72: aload_1
        73: invokestatic  #68                 // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
        76: dup
        77: ldc           #70                 // String get(...)
        79: invokestatic  #73                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
        82: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 20 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 19 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/net/URI ]
      LineNumberTable:
        line 31: 6
        line 31: 21
        line 107: 24
        line 31: 26
        line 31: 28
        line 32: 41
        line 34: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26       2     2 $i$a$-require-FunctionsKt$testResource$1   I
           72      11     1 resource   Ljava/net/URI;
            0      83     0  path   Ljava/lang/String;
    RuntimeInvisibleAnnotations:
      0: #7()
        org.jetbrains.annotations.NotNull
    RuntimeInvisibleParameterAnnotations:
      parameter 0:
        0: #7()
          org.jetbrains.annotations.NotNull

  public static final <T extends java.lang.Object> T loadTestResource(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=11, args_size=1
         0: aload_0
         1: ldc           #9                  // String path
         3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
         6: iconst_0
         7: istore_1
         8: aload_0
         9: checkcast     #17                 // class java/lang/CharSequence
        12: invokestatic  #23                 // Method kotlin/text/StringsKt.isBlank:(Ljava/lang/CharSequence;)Z
        15: ifne          22
        18: iconst_1
        19: goto          23
        22: iconst_0
        23: ifne          43
        26: iconst_0
        27: istore_3
        28: ldc           #25                 // String Path must not be blank
        30: astore_3
        31: new           #27                 // class java/lang/IllegalArgumentException
        34: dup
        35: aload_3
        36: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
        39: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        42: athrow
        43: aload_0
        44: invokestatic  #87                 // Method testResource:(Ljava/lang/String;)Ljava/nio/file/Path;
        47: astore_2
        48: aload_2
        49: iconst_0
        50: anewarray     #89                 // class java/nio/file/LinkOption
        53: invokestatic  #95                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        56: aload_2
        57: iconst_0
        58: anewarray     #89                 // class java/nio/file/LinkOption
        61: invokestatic  #98                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        64: iand
        65: ifne          92
        68: iconst_0
        69: istore        4
        71: aload_0
        72: invokedynamic #101,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        77: astore        4
        79: new           #49                 // class java/lang/IllegalStateException
        82: dup
        83: aload         4
        85: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
        88: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        91: athrow
        92: iconst_4
        93: ldc           #103                // String T
        95: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
        98: ldc           #4                  // class java/lang/Object
       100: invokestatic  #113                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
       103: astore_3
       104: aload_3
       105: ldc           #115                // class java/lang/String
       107: invokestatic  #113                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
       110: invokestatic  #119                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       113: ifeq          326
       116: aload_0
       117: invokestatic  #123                // Method java/lang/ClassLoader.getSystemResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
       120: astore        5
       122: aload         5
       124: ifnull        297
       127: aload         5
       129: astore        6
       131: getstatic     #129                // Field kotlin/text/Charsets.UTF_8:Ljava/nio/charset/Charset;
       134: astore        7
       136: new           #131                // class java/io/InputStreamReader
       139: dup
       140: aload         6
       142: aload         7
       144: invokespecial #134                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
       147: checkcast     #136                // class java/io/Reader
       150: astore        8
       152: sipush        8192
       155: istore        9
       157: aload         8
       159: instanceof    #138                // class java/io/BufferedReader
       162: ifeq          173
       165: aload         8
       167: checkcast     #138                // class java/io/BufferedReader
       170: goto          184
       173: new           #138                // class java/io/BufferedReader
       176: dup
       177: aload         8
       179: iload         9
       181: invokespecial #141                // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;I)V
       184: checkcast     #143                // class java/io/Closeable
       187: astore        7
       189: aconst_null
       190: astore        8
       192: nop
       193: aload         7
       195: checkcast     #138                // class java/io/BufferedReader
       198: astore        9
       200: iconst_0
       201: istore        10
       203: aload         9
       205: checkcast     #136                // class java/io/Reader
       208: invokestatic  #149                // Method kotlin/io/TextStreamsKt.readText:(Ljava/io/Reader;)Ljava/lang/String;
       211: astore        9
       213: iconst_1
       214: invokestatic  #155                // Method kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
       217: aload         7
       219: aload         8
       221: invokestatic  #161                // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
       224: iconst_1
       225: invokestatic  #164                // Method kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
       228: aload         9
       230: goto          262
       233: astore        9
       235: aload         9
       237: astore        8
       239: aload         9
       241: athrow
       242: astore        9
       244: iconst_1
       245: invokestatic  #155                // Method kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
       248: aload         7
       250: aload         8
       252: invokestatic  #161                // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
       255: iconst_1
       256: invokestatic  #164                // Method kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
       259: aload         9
       261: athrow
       262: checkcast     #115                // class java/lang/String
       265: astore        6
       267: aload         6
       269: ifnull        297
       272: aload         6
       274: invokestatic  #169                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       277: dup
       278: ldc           #171                // String lineSeparator(...)
       280: invokestatic  #73                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
       283: checkcast     #115                // class java/lang/String
       286: ldc           #173                // String \n
       288: iconst_0
       289: iconst_4
       290: aconst_null
       291: invokestatic  #177                // Method kotlin/text/StringsKt.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
       294: goto          298
       297: aconst_null
       298: iconst_1
       299: ldc           #103                // String T
       301: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
       304: checkcast     #4                  // class java/lang/Object
       307: dup
       308: ifnonnull     370
       311: pop
       312: new           #49                 // class java/lang/IllegalStateException
       315: dup
       316: aload_0
       317: invokedynamic #180,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       322: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       325: athrow
       326: aload_3
       327: ldc           #182                // class "[B"
       329: invokestatic  #113                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
       332: invokestatic  #119                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       335: ifeq          360
       338: aload_2
       339: invokestatic  #186                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
       342: dup
       343: ldc           #188                // String readAllBytes(...)
       345: invokestatic  #73                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
       348: iconst_1
       349: ldc           #103                // String T
       351: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
       354: checkcast     #4                  // class java/lang/Object
       357: goto          370
       360: new           #49                 // class java/lang/IllegalStateException
       363: dup
       364: ldc           #190                // String Unsupported file type. String and ByteArray are supported.
       366: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       369: athrow
       370: areturn
      Exception table:
         from    to  target type
           192   213   233   Class java/lang/Throwable
           192   213   242   any
           233   242   242   any
           242   244   242   any
      StackMapTable: number_of_entries = 14
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 19 /* same */
        frame_type = 252 /* append */
          offset_delta = 48
          locals = [ class java/nio/file/Path ]
        frame_type = 255 /* full_frame */
          offset_delta = 80
          locals = [ class java/lang/String, int, class java/nio/file/Path, class kotlin/reflect/KClass, top, class java/io/InputStream, class java/io/InputStream, class java/nio/charset/Charset, class java/io/Reader, int ]
          stack = []
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/io/BufferedReader ]
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class java/lang/String, int, class java/nio/file/Path, class kotlin/reflect/KClass, top, class java/io/InputStream, class java/io/InputStream, class java/io/Closeable, null ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class java/lang/String, int, class java/nio/file/Path, class kotlin/reflect/KClass, top, class java/io/InputStream, class java/io/InputStream, class java/io/Closeable, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class java/lang/String, int, class java/nio/file/Path, class kotlin/reflect/KClass, top, class java/io/InputStream, class java/io/InputStream, class java/io/Closeable, null, class java/lang/String, int ]
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class java/lang/String, int, class java/nio/file/Path, class kotlin/reflect/KClass, top, class java/io/InputStream ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 249 /* chop */
          offset_delta = 27
        frame_type = 33 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 59: 8
        line 59: 23
        line 107: 26
        line 59: 28
        line 59: 30
        line 61: 43
        line 62: 48
        line 107: 68
        line 62: 71
        line 62: 77
        line 64: 103
        line 65: 104
        line 67: 116
        line 66: 116
        line 65: 116
        line 65: 184
        line 66: 184
        line 65: 184
        line 66: 189
        line 107: 200
        line 66: 203
        line 66: 211
        line 66: 262
        line 67: 267
        line 65: 272
        line 67: 274
        line 65: 297
        line 67: 307
        line 65: 307
        line 68: 312
        line 69: 326
        line 70: 360
        line 64: 370
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28       2     3 $i$a$-require-FunctionsKt$loadTestResource$1   I
           71       6     4 $i$a$-check-FunctionsKt$loadTestResource$2   I
          203       8    10 $i$a$-use-FunctionsKt$loadTestResource$3   I
          200      11     9    p0   Ljava/io/BufferedReader;
            8     363     1 $i$f$loadTestResource   I
           48     323     2  file   Ljava/nio/file/Path;
            0     371     0  path   Ljava/lang/String;
    Signature: #83                          // <T:Ljava/lang/Object;>(Ljava/lang/String;)TT;

  public static final java.lang.Void shouldNotBeInvoked();
    descriptor: ()Ljava/lang/Void;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: ldc           #210                // String should not be invoked
         2: invokestatic  #216                // Method kotlin/test/AssertionsKt.fail:(Ljava/lang/String;)Ljava/lang/Void;
         5: pop
         6: new           #218                // class kotlin/KotlinNothingValueException
         9: dup
        10: invokespecial #221                // Method kotlin/KotlinNothingValueException."<init>":()V
        13: athrow
      LineNumberTable:
        line 79: 0
    RuntimeInvisibleAnnotations:
      0: #7()
        org.jetbrains.annotations.NotNull

  public static final <T extends java.lang.Throwable> java.lang.Throwable exceptionExpected(kotlin.jvm.functions.Function2<? super kotlinx.coroutines.CoroutineScope, ? super kotlin.coroutines.Continuation<? super kotlin.Unit>, ? extends java.lang.Object>);
    descriptor: (Lkotlin/jvm/functions/Function2;)Ljava/lang/Throwable;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=1
         0: aload_0
         1: ldc           #226                // String func
         3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
         6: iconst_0
         7: istore_1
         8: new           #228                // class kotlin/jvm/internal/Ref$ObjectRef
        11: dup
        12: invokespecial #229                // Method kotlin/jvm/internal/Ref$ObjectRef."<init>":()V
        15: astore_2
        16: iconst_0
        17: istore        4
        19: getstatic     #235                // Field kotlinx/coroutines/CoroutineExceptionHandler.Key:Lkotlinx/coroutines/CoroutineExceptionHandler$Key;
        22: astore        5
        24: new           #237                // class io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$$inlined$CoroutineExceptionHandler$1
        27: dup
        28: aload         5
        30: aload_2
        31: invokespecial #240                // Method io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$$inlined$CoroutineExceptionHandler$1."<init>":(Lkotlinx/coroutines/CoroutineExceptionHandler$Key;Lkotlin/jvm/internal/Ref$ObjectRef;)V
        34: checkcast     #231                // class kotlinx/coroutines/CoroutineExceptionHandler
        37: nop
        38: astore_3
        39: aconst_null
        40: new           #242                // class io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$1
        43: dup
        44: aload_3
        45: aload_0
        46: aconst_null
        47: invokespecial #245                // Method io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$1."<init>":(Lkotlinx/coroutines/CoroutineExceptionHandler;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V
        50: checkcast     #247                // class kotlin/jvm/functions/Function2
        53: iconst_1
        54: aconst_null
        55: invokestatic  #253                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
        58: pop
        59: aload_2
        60: getfield      #257                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
        63: checkcast     #85                 // class java/lang/Throwable
        66: astore        4
        68: aload         4
        70: ifnonnull     88
        73: ldc_w         #259                // String No exception has been thrown
        76: invokestatic  #216                // Method kotlin/test/AssertionsKt.fail:(Ljava/lang/String;)Ljava/lang/Void;
        79: pop
        80: new           #218                // class kotlin/KotlinNothingValueException
        83: dup
        84: invokespecial #221                // Method kotlin/KotlinNothingValueException."<init>":()V
        87: athrow
        88: aload         4
        90: iconst_3
        91: ldc           #103                // String T
        93: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
        96: instanceof    #85                 // class java/lang/Throwable
        99: ifne          154
       102: iconst_4
       103: ldc           #103                // String T
       105: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
       108: ldc           #85                 // class java/lang/Throwable
       110: invokestatic  #113                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
       113: invokeinterface #262,  1          // InterfaceMethod kotlin/reflect/KClass.getSimpleName:()Ljava/lang/String;
       118: aload_2
       119: getfield      #257                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
       122: dup
       123: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
       126: invokevirtual #270                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       129: invokestatic  #113                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
       132: invokeinterface #262,  1          // InterfaceMethod kotlin/reflect/KClass.getSimpleName:()Ljava/lang/String;
       137: invokedynamic #275,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       142: invokestatic  #216                // Method kotlin/test/AssertionsKt.fail:(Ljava/lang/String;)Ljava/lang/Void;
       145: pop
       146: new           #218                // class kotlin/KotlinNothingValueException
       149: dup
       150: invokespecial #221                // Method kotlin/KotlinNothingValueException."<init>":()V
       153: athrow
       154: aload_2
       155: getfield      #257                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
       158: dup
       159: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
       162: checkcast     #85                 // class java/lang/Throwable
       165: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 88
          locals = [ class kotlin/jvm/functions/Function2, int, class kotlin/jvm/internal/Ref$ObjectRef, class kotlinx/coroutines/CoroutineExceptionHandler, class java/lang/Throwable, class kotlinx/coroutines/CoroutineExceptionHandler$Key ]
          stack = []
        frame_type = 251 /* same_frame_extended */
          offset_delta = 65
      LineNumberTable:
        line 89: 8
        line 91: 16
        line 108: 19
        line 111: 37
        line 91: 38
        line 95: 39
        line 101: 59
        line 102: 68
        line 103: 88
        line 104: 154
        line 101: 165
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      19     4 $i$f$CoroutineExceptionHandler   I
            8     158     1 $i$f$exceptionExpected   I
           16     150     2 result   Lkotlin/jvm/internal/Ref$ObjectRef;
           39     127     3 exceptionHandler   Lkotlinx/coroutines/CoroutineExceptionHandler;
            0     166     0  func   Lkotlin/jvm/functions/Function2;
    Signature: #224                         // <T:Ljava/lang/Throwable;>(Lkotlin/jvm/functions/Function2<-Lkotlinx/coroutines/CoroutineScope;-Lkotlin/coroutines/Continuation<-Lkotlin/Unit;>;+Ljava/lang/Object;>;)Ljava/lang/Throwable;
}
InnerClasses:
  public static final #242;               // class io/github/manamiproject/modb/test/FunctionsKt$exceptionExpected$1
  public static final #303= #228 of #302; // ObjectRef=class kotlin/jvm/internal/Ref$ObjectRef of class kotlin/jvm/internal/Ref
SourceFile: "Functions.kt"
SourceDebugExtension:
  SMAP
  Functions.kt
  Kotlin
  *S Kotlin
  *F
  + 1 Functions.kt
  io/github/manamiproject/modb/test/FunctionsKt
  + 2 fake.kt
  kotlin/jvm/internal/FakeKt
  + 3 CoroutineExceptionHandler.kt
  kotlinx/coroutines/CoroutineExceptionHandlerKt
  *L
  1#1,106:1
  1#2:107
  44#3,4:108
  *S KotlinDebug
  *F
  + 1 Functions.kt
  io/github/manamiproject/modb/test/FunctionsKt
  *L
  91#1:108,4
  *E
RuntimeVisibleAnnotations:
  0: #285(#286=[I#287,I#288,I#288],#289=I#287,#290=I#291,#292=[s#293],#294=[s#5,s#198,s#8,s#295,s#81,s#102,s#82,s#207,s#295,s#222,s#295,s#225,s#296,s#297,s#298,s#295,s#295,s#299,s#223,s#300])
    kotlin.Metadata(
      mv=[2,0,0]
      k=2
      xi=48
      d1=["\u00008\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0010\u0001\n\u0000\n\u0002\u0010\u0003\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\u001a\u000e\u0010\u0000\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u0003\u001a\u001e\u0010\u0004\u001a\u0002H\u0005\"\u0006\b\u0000\u0010\u0005\u0018\u00012\u0006\u0010\u0002\u001a\u00020\u0003H\u0086\b¢\u0006\u0002\u0010\u0006\u001a\u0006\u0010\u0007\u001a\u00020\b\u001aH\u0010\t\u001a\u00020\n\"\n\b\u0000\u0010\u0005\u0018\u0001*\u00020\n2)\b\b\u0010\u000b\u001a#\b\u0001\u0012\u0004\u0012\u00020\r\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u000f0\u000e\u0012\u0006\u0012\u0004\u0018\u00010\u00100\f¢\u0006\u0002\b\u0011H\u0086\bø\u0001\u0000¢\u0006\u0002\u0010\u0012\u0082\u0002\u0007\n\u0005\b\u009920\u0001¨\u0006\u0013"]
      d2=["testResource","Ljava/nio/file/Path;","path","","loadTestResource","T","(Ljava/lang/String;)Ljava/lang/Object;","shouldNotBeInvoked","","exceptionExpected","","func","Lkotlin/Function2;","Lkotlinx/coroutines/CoroutineScope;","Lkotlin/coroutines/Continuation;","","","Lkotlin/ExtensionFunctionType;","(Lkotlin/jvm/functions/Function2;)Ljava/lang/Throwable;","modb-test"]
    )
RuntimeInvisibleAnnotations:
  0: #305(#306=[s#307])
    kotlin.jvm.internal.SourceDebugExtension(
      value=["SMAP\nFunctions.kt\nKotlin\n*S Kotlin\n*F\n+ 1 Functions.kt\nio/github/manamiproject/modb/test/FunctionsKt\n+ 2 fake.kt\nkotlin/jvm/internal/FakeKt\n+ 3 CoroutineExceptionHandler.kt\nkotlinx/coroutines/CoroutineExceptionHandlerKt\n*L\n1#1,106:1\n1#2:107\n44#3,4:108\n*S KotlinDebug\n*F\n+ 1 Functions.kt\nio/github/manamiproject/modb/test/FunctionsKt\n*L\n91#1:108,4\n*E\n"]
    )
BootstrapMethods:
  0: #58 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #51 Path [\u0001] not found.
  1: #58 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #100 [\u0001] either not exists or is not a file.
  2: #58 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #179 Unable to load file [\u0001]
  3: #58 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #272 Expected [\u0001] to be thrown, but [\u0001] was thrown.
